From 57b99a3a55547ae52c901d5635964136c62b6a63 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 11:31:48 +0200
Subject: [PATCH 1/7] main-window: Drop confusing cast
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 src/calls-main-window.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/calls-main-window.c b/src/calls-main-window.c
index 126e7ad4..9fc1d6ae 100644
--- a/src/calls-main-window.c
+++ b/src/calls-main-window.c
@@ -297,8 +297,7 @@ set_property (GObject      *object,
 
   switch (property_id) {
   case PROP_RECORD_STORE:
-    g_set_object (&self->record_store,
-                  G_LIST_MODEL (g_value_get_object (value)));
+    g_set_object (&self->record_store, g_value_get_object (value));
     break;
 
   default:
-- 
GitLab


From a56f43b03698e129de4fd9b26f47ddc49c9a054b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 11:50:04 +0200
Subject: [PATCH 2/7] record-store: Track async operations
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

We need to be able to tell when all async operations finished.
Otherwise we might shut down the daemon with in flight operations
leaving a open database around.

Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 src/calls-record-store.c | 29 +++++++++++++++++++++++++++++
 src/calls-record-store.h |  1 +
 2 files changed, 30 insertions(+)

diff --git a/src/calls-record-store.c b/src/calls-record-store.c
index 56d2e6c1..d332b9ac 100644
--- a/src/calls-record-store.c
+++ b/src/calls-record-store.c
@@ -97,6 +97,7 @@ struct _CallsRecordStore {
   gchar               *filename;
   GomAdapter          *adapter;
   GomRepository       *repository;
+  int                  busy;
 
   GListStore          *list_store;
 };
@@ -202,6 +203,7 @@ load_calls_fetch_cb (GomResourceGroup *group,
   g_free (records);
   g_object_unref (group);
 exit:
+  self->busy--;
   g_object_unref (self);
 }
 
@@ -234,12 +236,14 @@ load_calls_find_cb (GomRepository    *repository,
 
   g_debug ("Found %u call records in database `%s', fetching",
            count, self->filename);
+  self->busy++;
   gom_resource_group_fetch_async (group,
                                   0,
                                   count,
                                   (GAsyncReadyCallback) load_calls_fetch_cb,
                                   g_object_ref (self));
 exit:
+  self->busy--;
   g_object_unref (self);
 }
 
@@ -260,6 +264,7 @@ load_calls (CallsRecordStore *self)
 
   g_debug ("Finding records in call record database `%s'",
            self->filename);
+  self->busy++;
   gom_repository_find_sorted_async (self->repository,
                                     CALLS_TYPE_CALL_RECORD,
                                     filter,
@@ -297,6 +302,7 @@ set_up_repo_migrate_cb (GomRepository    *repo,
   }
 
   g_signal_emit (self, signals[SIGNAL_DB_DONE], 0, ok);
+  self->busy--;
   g_object_unref (self);
 }
 
@@ -320,6 +326,7 @@ set_up_repo (CallsRecordStore *self)
            " record database `%s'",
            self->filename);
   types = g_list_append (types, (gpointer) CALLS_TYPE_CALL_RECORD);
+  self->busy++;
   gom_repository_automatic_migrate_async
     (repo,
     RECORD_STORE_VERSION,
@@ -380,6 +387,7 @@ open_repo_adapter_open_cb (GomAdapter       *adapter,
     set_up_repo (self);
   }
 
+  self->busy--;
   g_object_unref (self);
 }
 
@@ -406,6 +414,7 @@ open_repo (CallsRecordStore *self)
   uri = g_strdup_printf ("file:%s", self->filename);
   g_debug ("Opening call record database using URI `%s'", uri);
   self->adapter = gom_adapter_new ();
+  self->busy++;
   gom_adapter_open_async
     (self->adapter,
     uri,
@@ -794,3 +803,23 @@ calls_record_store_get_list_model (CallsRecordStore *self)
 {
   return G_LIST_MODEL (self->list_store);
 }
+
+/**
+ * calls_record_store_is_busy:
+ * @self: The record store
+ *
+ * Check whether there are async database operations in flight. It
+ * is only save to dispose the record store when this function returns
+ * `FALSE`.
+ *
+ * Returns: `TRUE` when there are async db operations, otherwise
+ *   `FALSE`.
+ */
+gboolean
+calls_record_store_is_busy (CallsRecordStore *self)
+{
+  g_assert (CALLS_IS_RECORD_STORE (self));
+  g_assert (self->busy >= 0);
+
+  return !!self->busy;
+}
diff --git a/src/calls-record-store.h b/src/calls-record-store.h
index 847966f3..66f36f21 100644
--- a/src/calls-record-store.h
+++ b/src/calls-record-store.h
@@ -35,6 +35,7 @@ G_DECLARE_FINAL_TYPE (CallsRecordStore, calls_record_store, CALLS, RECORD_STORE,
 
 CallsRecordStore *calls_record_store_new (void);
 GListModel *calls_record_store_get_list_model (CallsRecordStore *);
+gboolean    calls_record_store_is_busy (CallsRecordStore *self);
 
 G_END_DECLS
 
-- 
GitLab


From 32a88ecd8097d77549fc49518b81466d3ed07dba Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 11:51:00 +0200
Subject: [PATCH 3/7] application: Wait until all async database operations
 finished
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When shutting down make sure there are no in-flight database operations.
Otherwise the database might not be closed correctly.

Improves fix for https://gitlab.gnome.org/GNOME/calls/-/issues/508

Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 src/calls-application.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/calls-application.c b/src/calls-application.c
index daeec765..b4f358ad 100644
--- a/src/calls-application.c
+++ b/src/calls-application.c
@@ -582,6 +582,13 @@ app_shutdown (GApplication *application)
     g_main_context_iteration (context, TRUE);
   }
 
+  while (self->record_store && calls_record_store_is_busy (self->record_store)) {
+    if (g_timer_elapsed (timer, NULL) > 10)
+      break;
+
+    g_main_context_iteration (context, TRUE);
+  }
+
   cui_uninit ();
 
   G_APPLICATION_CLASS (calls_application_parent_class)->shutdown (application);
-- 
GitLab


From 85b65d030dfd9b7e3b76c5a00c32161a353c98a5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 10:59:36 +0200
Subject: [PATCH 4/7] tests: Make the application test depend on the binary
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Otherwise it is not rebuilt when it changes

Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 tests/meson.build | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/tests/meson.build b/tests/meson.build
index 425018a3..8a5bd9a9 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -181,7 +181,8 @@ if dbus_run_session.found ()
       dbus_run_session,
       args: t.full_path(),
       env: test_env,
-      timeout : 300
+      timeout : 300,
+      depends: t
       )
 endif
 
-- 
GitLab


From 8f6b8bc6b9956e0347d147512aa8c310563af2ce Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 10:11:06 +0200
Subject: [PATCH 5/7] application: Actually test for write ahead log
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

While the test was correct and checked if there is only
`record.db` in a given dir (and no other files) it wouldn't
tell us whether the file wasn't there or there were additional
files found. Hence replace the test by assertions that tell
use exactly what failed easing debugging in CI.

Fixes: e4bd4580 ("tests: Add application shutdown tests")
Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 tests/test-application.c | 52 +++++++++++++++++++++-------------------
 1 file changed, 27 insertions(+), 25 deletions(-)

diff --git a/tests/test-application.c b/tests/test-application.c
index 8a90d040..74d8bb0d 100644
--- a/tests/test-application.c
+++ b/tests/test-application.c
@@ -11,6 +11,29 @@
 #include <glib/gstdio.h>
 #include <glib.h>
 
+
+#define calls_assert_in_dir(file, dir) G_STMT_START {                   \
+  g_autofree char *__p = g_build_path ("/", dir, file, NULL);           \
+  g_autoptr (GFile) __f = g_file_new_for_path (__p);                    \
+  if (!g_file_query_exists (__f, NULL)) {                               \
+    g_autofree char *__msg =                                            \
+      g_strdup_printf ("File %s does not exist", __p);                  \
+    g_assertion_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, __msg); \
+  }                                                                     \
+} G_STMT_END
+
+
+#define calls_assert_not_in_dir(file, dir) G_STMT_START {               \
+  g_autofree char *__p = g_build_path ("/", dir, file, NULL);           \
+  g_autoptr (GFile) __f = g_file_new_for_path (__p);                    \
+  if (g_file_query_exists (__f, NULL)) {                                \
+    g_autofree char *__msg =                                            \
+      g_strdup_printf ("File %s must not exist", __p);                  \
+    g_assertion_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, __msg); \
+  }                                                                     \
+} G_STMT_END
+
+
 static gboolean
 on_idle_quit (gpointer user_data)
 {
@@ -96,29 +119,6 @@ test_application_shutdown_sigterm (void)
 }
 
 
-static gboolean
-dir_contains (const char *dir,
-              const char *file,
-              gboolean    only_file)
-{
-  g_autoptr (GDir) tmp_dir = g_dir_open (dir, 0, NULL);
-  const char *tmp_file;
-  gboolean found = FALSE;
-  uint n = 0;
-
-  while ((tmp_file = g_dir_read_name (tmp_dir))) {
-    if (g_strcmp0 (tmp_file, file) == 0)
-      found = TRUE;
-    n++;
-  }
-
-  if (only_file)
-    return found && n == 1;
-
-  return found;
-}
-
-
 int
 main (int   argc,
       char *argv[])
@@ -143,8 +143,10 @@ main (int   argc,
 
   status = g_test_run ();
 
-  /* assert there is no dangling write-ahead-log */
-  g_assert_true (dir_contains (rec_dir, "records.db", TRUE));
+  /* Check that sqlite db is there but no stale write ahead logs */
+  calls_assert_in_dir ("records.db", rec_dir);
+  calls_assert_not_in_dir ("records.db-wal", rec_dir);
+  calls_assert_not_in_dir ("records.db-shm", rec_dir);
 
   g_rmdir (rec_dir);
 
-- 
GitLab


From e608c83273db9a9535f7d020b991f6aaf5ca4106 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 08:29:17 +0200
Subject: [PATCH 6/7] app: Use automatic cleanup
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 src/main.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/main.c b/src/main.c
index c97d607b..3eabe433 100644
--- a/src/main.c
+++ b/src/main.c
@@ -33,7 +33,7 @@ int
 main (int    argc,
       char **argv)
 {
-  GApplication *app;
+  g_autoptr (GApplication) app = NULL;
   int status;
 
   textdomain (GETTEXT_PACKAGE);
@@ -44,7 +44,6 @@ main (int    argc,
 
   app = G_APPLICATION (calls_application_new ());
   status = g_application_run (app, argc, argv);
-  g_object_unref (app);
 
   return status;
 }
-- 
GitLab


From 7103f18e484ff3c3d5d5f3b8e96a4e2e02dbb6e7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Mon, 13 Oct 2025 08:37:07 +0200
Subject: [PATCH 7/7] application: Load plugins early
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes: 574e1f79 ("application: Drop ignore_activation flag")
Closes: https://gitlab.gnome.org/GNOME/calls/-/issues/718
Signed-off-by: Guido Günther <agx@sigxcpu.org>
Part-of: <https://gitlab.gnome.org/GNOME/calls/-/merge_requests/795>
---
 src/calls-application.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/calls-application.c b/src/calls-application.c
index b4f358ad..ea29b116 100644
--- a/src/calls-application.c
+++ b/src/calls-application.c
@@ -468,6 +468,7 @@ static void
 startup (GApplication *application)
 {
   g_autoptr (GError) error = NULL;
+  CallsApplication *self = CALLS_APPLICATION (application);
 
   G_APPLICATION_CLASS (calls_application_parent_class)->startup (application);
 
@@ -503,6 +504,11 @@ startup (GApplication *application)
     g_debug ("Enable daemon mode");
   }
 
+  start_proper (self);
+  g_action_group_activate_action (G_ACTION_GROUP (application),
+                                  "set-default-plugins",
+                                  NULL);
+
   manager_state_changed_cb (application);
 }
 
@@ -540,10 +546,6 @@ calls_application_command_line (GApplication            *application,
     g_action_group_activate_action (G_ACTION_GROUP (application),
                                     "set-plugin-names",
                                     plugins);
-  } else {
-    g_action_group_activate_action (G_ACTION_GROUP (application),
-                                    "set-default-plugins",
-                                    NULL);
   }
 
   if (g_variant_dict_lookup (options, "dial", "&s", &arg))
-- 
GitLab

